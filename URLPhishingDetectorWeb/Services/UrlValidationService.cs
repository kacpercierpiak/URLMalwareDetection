using Cyber.URLPhishing.Domain;
using Cyber.URLPhishing.Web.Contracts;
using Cyber.URLPhishing.Web.Models;
using Cyber.URLPhising.ML.Predictors;

namespace Cyber.URLPhishing.Web.Services;

public class UrlValidationService : IUrlValidationService
{   
    private readonly Predictor _predictor;
    private readonly IURLService _urlService;
    public UrlValidationService(Predictor predictor, IURLService urlService)
    {
        _predictor = predictor;
        _urlService = urlService;

    }
    public async Task<UrlValidationResponse> CheckUrl(string? url)
    {
        UrlValidationResponse urlValidationResponse = new();
        if(url.StartsWith("https"))
        {
            url = "http" + url[5..];
        }
        if(!url.StartsWith("http"))
        {
            url = "http://" + url;
        }
        var result = _predictor.Predict((await _urlService.GetUrlInfo(url)).ToUrlData());

        urlValidationResponse.State = result.PredictedLabel ? UrlValidationStatus.Phishing : UrlValidationStatus.Benign;
        return urlValidationResponse;
    }
}

