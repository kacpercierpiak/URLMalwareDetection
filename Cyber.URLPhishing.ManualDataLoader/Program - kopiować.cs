// See https://aka.ms/new-console-template for more information
using CsvHelper;
using CsvHelper.Configuration;
using Cyber.URLPhishing.Application.Repositories;
using Cyber.URLPhishing.Application.Services;
using Cyber.URLPhishing.Domain;
using Cyber.URLPhishing.Domain.Models.Response;
using Microsoft.Extensions.Logging.Abstractions;
using System.Globalization;
using System.Text;
/*
List<CsvUrlRequest> records;
var config = new CsvConfiguration(CultureInfo.CurrentCulture) { Delimiter = "ą", Encoding = Encoding.UTF8 };
using (var reader = new StreamReader("File\\NewFinal.csv"))
using (var csv = new CsvReader(reader, config))
{
    records = csv.GetRecords<CsvUrlRequest>().ToList();
}
IURLRepository urlRepository = new URLRepository();
IURLService urlService = new URLService(NullLogger<URLService>.Instance, urlRepository);

List<CsvUrlResponse> responseList = new List<CsvUrlResponse>();
for(int i = 0; i < records.Count; i++)
{
    if(i%1000==0)
    {
        Console.WriteLine(i);
    }
    try
    {
        responseList.Add(new CsvUrlResponse(records[i], await urlService.GetUrlInfo(records[i].Url)));
    }catch
    {
        Console.WriteLine(records[i].Url);
    }
    
}

using (var writer = new StreamWriter("File\\file.csv"))
using (var csv = new CsvWriter(writer, config))
{
    csv.WriteRecords(responseList);
}
Console.WriteLine(records.First());
*/