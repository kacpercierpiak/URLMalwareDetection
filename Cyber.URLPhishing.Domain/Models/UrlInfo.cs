using Cyber.URLPhishing.Domain.Models.DataModels;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace Cyber.URLPhishing.Domain
{
    public class UrlInfo
    {
        public string Url { get; init; } = String.Empty;
        public int UrlLength { get; init; } = 0;
        public double UrlDigitLetterRatio { get; init; } = 0.0;
        public int Port { get; init; } = 0;
        public string TopLevelDomain { get; init; } = String.Empty;
        public int TopLevelDomainSegments { get; init; } = 0;
        public string Hostname { get; init; } = String.Empty;
        public string RegDomain { get; init; } = String.Empty;
        public string Domain { get; init; } = String.Empty;
        public int DomainLength { get; init; } = 0;
        public int DomainDigitCount { get; init; } = 0;
        public bool DomainContainsIp { get; init; } = false;
        public int DomainSpecialChars { get; init; } = 0;
        public int DomainNonAlphaNumeric { get; init; } = 0;
        public int DomainHyphens { get; init; } = 0;
        public int UrlAtQty { get; init; } = 0;
        public bool DomainPresenceInAlexaDomains { get; init; } = false;
        public int SubDomainDotsQty { get; init; } = 0;       
        public int PathDoubleSlashQty { get; init; } = 0;
        public int PathSubDirQty { get; init; } = 0;
        public int PathSpaceQty { get; init; } = 0;
        public int PathEncodingQty { get; init; } = 0;
        public int PathUpperCaseDirQty { get; init; } = 0;
        public int PathMinLenghtDir { get; init; } = 0;
        public int PathMaxLenghtDir { get; init; } = 0;
        public int PathSpecialChars { get; init; } = 0;
        public int PathZerosQty { get; init; } = 0;
        public double PathUpperLowerCharRatio { get; init; } = 0;
        public int ParametersLenght { get; init; } = 0;
        public int QueryQty { get; init; } = 0;
        public int Tld { get; set; } = 0;

        public UrlInfo() { }
        public UrlInfo(UrlInfo urlInfo)
        {
            Url = urlInfo.Url;
            UrlLength = urlInfo.UrlLength;
            UrlDigitLetterRatio = urlInfo.UrlDigitLetterRatio;
            Port = urlInfo.Port;
            TopLevelDomain = urlInfo.TopLevelDomain;
            TopLevelDomainSegments = urlInfo.TopLevelDomainSegments;
            Hostname = urlInfo.Hostname;
            RegDomain = urlInfo.RegDomain;
            Domain = urlInfo.Domain;
            DomainLength = urlInfo.DomainLength;
            DomainDigitCount = urlInfo.DomainDigitCount;
            DomainContainsIp = urlInfo.DomainContainsIp;
            DomainSpecialChars = urlInfo.DomainSpecialChars;
            DomainNonAlphaNumeric = urlInfo.DomainNonAlphaNumeric;
            DomainHyphens = urlInfo.DomainHyphens;
            UrlAtQty = urlInfo.UrlAtQty;
            DomainPresenceInAlexaDomains = urlInfo.DomainPresenceInAlexaDomains;
            SubDomainDotsQty = urlInfo.SubDomainDotsQty;
            PathDoubleSlashQty = urlInfo.PathDoubleSlashQty;
            PathSubDirQty = urlInfo.PathSubDirQty;
            PathSpaceQty = urlInfo.PathSpaceQty;
            PathEncodingQty = urlInfo.PathEncodingQty;
            PathUpperCaseDirQty = urlInfo.PathUpperCaseDirQty;
            PathMinLenghtDir = urlInfo.PathMinLenghtDir;
            PathMaxLenghtDir = urlInfo.PathMaxLenghtDir;
            PathSpecialChars = urlInfo.PathSpecialChars;
            PathZerosQty = urlInfo.PathZerosQty;
            PathUpperLowerCharRatio = urlInfo.PathUpperLowerCharRatio;
            ParametersLenght = urlInfo.ParametersLenght;
            QueryQty = urlInfo.QueryQty;
            Tld = urlInfo.Tld; 
        }

        public UrlData ToUrlData()
        {
            return new UrlData()
            {           
            UrlLength = this.UrlLength,
            UrlDigitLetterRatio = (float)this.UrlDigitLetterRatio,
            Port = this.Port,
            TopLevelDomainSegments = this.TopLevelDomainSegments,          
            DomainLength = this.DomainLength,
            DomainDigitCount = this.DomainDigitCount,
            DomainContainsIp = this.DomainContainsIp?1:0,
            DomainSpecialChars = this.DomainSpecialChars,
            DomainNonAlphaNumeric = this.DomainNonAlphaNumeric,
            DomainHyphens = this.DomainHyphens,
            UrlAtQty = this.UrlAtQty,
            PathDoubleSlashQty = this.PathDoubleSlashQty,
            PathSubDirQty = this.PathSubDirQty,
            PathSpaceQty = this.PathSpaceQty,
            PathEncodingQty = this.PathEncodingQty,
            PathUpperCaseDirQty = this.PathUpperCaseDirQty,
            PathMinLenghtDir = this.PathMinLenghtDir,
            PathMaxLenghtDir = this.PathMaxLenghtDir,
            PathSpecialChars = this.PathSpecialChars,
            PathZerosQty = this.PathZerosQty,
            PathUpperLowerCharRatio = (float)this.PathUpperLowerCharRatio,
            ParametersLenght = this.ParametersLenght,
            QueryQty = this.QueryQty,
            Tld= this.Tld
        };

        }
    }
   
}
